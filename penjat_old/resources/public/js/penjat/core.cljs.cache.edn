;; Analyzed by ClojureScript 1.7.170
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name penjat.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, re-frame.core re-frame.core}, :uses {subscribe re-frame.core, register-sub re-frame.core, path re-frame.core, dispatch-sync re-frame.core, dispatch re-frame.core, register-handler re-frame.core}, :defs {time-updater {:name penjat.core/time-updater, :file "src/cljs/penjat/core.cljs", :line 12, :column 1, :end-line 12, :end-column 22, :meta {:file "/Users/icabrebarrera/dev/clojure/penjat/src/cljs/penjat/core.cljs", :line 12, :column 10, :end-line 12, :end-column 22}}, initial-state {:name penjat.core/initial-state, :file "src/cljs/penjat/core.cljs", :line 15, :column 1, :end-line 15, :end-column 19, :meta {:file "/Users/icabrebarrera/dev/clojure/penjat/src/cljs/penjat/core.cljs", :line 15, :column 6, :end-line 15, :end-column 19}}, greeting {:protocol-inline nil, :meta {:file "/Users/icabrebarrera/dev/clojure/penjat/src/cljs/penjat/core.cljs", :line 66, :column 7, :end-line 66, :end-column 15, :arglists (quote ([message]))}, :name penjat.core/greeting, :variadic false, :file "src/cljs/penjat/core.cljs", :end-column 15, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, clock {:protocol-inline nil, :meta {:file "/Users/icabrebarrera/dev/clojure/penjat/src/cljs/penjat/core.cljs", :line 71, :column 7, :end-line 71, :end-column 12, :arglists (quote ([]))}, :name penjat.core/clock, :variadic false, :file "src/cljs/penjat/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, color-input {:protocol-inline nil, :meta {:file "/Users/icabrebarrera/dev/clojure/penjat/src/cljs/penjat/core.cljs", :line 86, :column 7, :end-line 86, :end-column 18, :arglists (quote ([]))}, :name penjat.core/color-input, :variadic false, :file "src/cljs/penjat/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, simple-example {:protocol-inline nil, :meta {:file "/Users/icabrebarrera/dev/clojure/penjat/src/cljs/penjat/core.cljs", :line 99, :column 7, :end-line 99, :end-column 21, :arglists (quote ([]))}, :name penjat.core/simple-example, :variadic false, :file "src/cljs/penjat/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, run {:protocol-inline nil, :meta {:file "/Users/icabrebarrera/dev/clojure/penjat/src/cljs/penjat/core.cljs", :line 110, :column 16, :end-line 110, :end-column 19, :export true, :arglists (quote ([]))}, :name penjat.core/run, :variadic false, :file "src/cljs/penjat/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent.ratom reagent.ratom, reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:div.example-clock :color :timer :value :type :style :div :initialize :input :time-color :div.color-input :h1 :on-change}, :order [:timer :time-color :initialize :h1 :style :color :div.example-clock :div.color-input :input :type :value :on-change :div]}, :doc nil}